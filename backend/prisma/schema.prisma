// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstname String?
  lastname  String?
  user_type String?
  profileUrl String?
  bio String?
  posts     Post[]
  projects  Project[]
  bids      Bidder[]
  alumini Alumini?
  student Student?
}

model Alumini {
  id Int @id @default(autoincrement())
  user_id Int @unique
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  experience String?
  company String?
  role String?
  
}
model Student {
  id Int @id @default(autoincrement())
  user_id Int @unique
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  university String?
  batch String?
  course  String?

}

model Post {
  id      Int    @id @default(autoincrement())
  title   String
  content String
  tags  String[]
  attachments String[]
  user_id Int
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Project {
  id       Int      @id @default(autoincrement())
  title    String
  content  String
  tags  String[]
  attachments String[]
  user_id  Int
  user     User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  bidders  Bidder[]
}

model Bidder {
  id         Int      @id @default(autoincrement())
  project_id Int      
  project    Project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
